##
## Pre-tasks
##

- name: global pre tasks
  hosts: all
  remote_user: root
  gather_facts: False
  pre_tasks:
  - name: Verify Ansible meets version requirements.
    assert:
      that: "ansible_version.full is version_compare('2.7', '>=')"
      msg: >
        "You must update Ansible to at least 2.7."

  - name: install ansible dependencies (python)
    raw: test -e /usr/bin/python || (apt-get -y update && apt-get install -y python-minimal python-pkg-resources) # install pkg-resources to avoid needlesly triggering the next test
    changed_when: false # raw has no change handler

  - name: install ansible dependencies (python-pkg-resources)
    raw: test -e /usr/lib/python2.7/dist-packages/pkg_resources.py || (apt-get -y update && apt-get install -y python-pkg-resources)
    changed_when: false # raw has no change handler

  - name: remove custom systemd preferences
    file: path=/etc/apt/preferences.d/systemd state=absent

  - name: install systemd and dependencies
    apt:
      package:
      - dbus
      - systemd
      - systemd-sysv
    register: systemd_install

  - name: find out which process is PID 1
    stat: path="/proc/1/exe"
    register: pid1
    changed_when: false

  - name: reboot the box if needed
    reboot:
      msg: "ansible dependencies installed"
    when: systemd_install.changed or pid1.stat.lnk_source != "/lib/systemd/systemd"


###
### Common roles
###

- name: common roles
  hosts: all
  remote_user: root
  tags: [common]
  roles:
  - common-repository-debian-backports
  - common
  - { role: cloudalchemy.node-exporter, tags: [ 'node_exporter' ] }


##
## Video roles
##

- name: video-control-server
  hosts: video-control-server
  remote_user: root
  roles:
  - { role: laptop, tags: [ 'laptop' ] }
  - { role: video-control-server, tags: [ 'video-control-server' ] }
  - { role: cloudalchemy.grafana, tags: [ 'grafana' ] }

- name: video-box
  hosts: video-box
  remote_user: root
  roles:
  - { role: video-box, tags: [ 'video-box' ] }

- name: video-voctop
  hosts: video-voctop
  remote_user: root
  roles:
  - { role: laptop, tags: [ 'laptop' ] }
  - { role: video-voctop, tags: [ 'video-voctop' ] }

- name: video-stream-dump
  hosts: video-stream-dump
  remote_user: root
  roles:
  - { role: laptop, tags: [ 'laptop' ] }
  - { role: video-stream-dump, tags: [ 'video-stream-dump' ] }

- name: video-stream-dump-external
  hosts: video-stream-dump-external
  remote_user: root
  roles:
  - { role: video-stream-dump, tags: [ 'video-stream-dump-external' ] }

- name: video-streamer-backend
  hosts: video-streamer-backend
  remote_user: root
  roles:
  - scaleway
  - { role: video-streamer-backend, tags: [ 'video-streamer-backend' ] }
  - mtail

- name: video-streamer-frontend
  hosts: video-streamer-frontend
  remote_user: root
  roles:
  - scaleway
  - { role: video-streamer-frontend, tags: [ 'video-streamer-frontend' ] }
  - mtail

- name: video-web-frontend
  hosts: video-web-frontend
  remote_user: root
  roles:
  - scaleway
  - { role: video-web-frontend, tags: [ 'video-web-frontend' ] }


##
## Specific roles
##
- name: event-primary
  hosts: event-primary
  remote_user: root
  tags: [event-primary]
  roles:
  - dhclient
  - hwraid
  - rsyslog
  - debops.dhcpd
  - dns
  - oxidized
  - antoiner77.caddy

- name: event-secondary
  hosts: event-secondary
  remote_user: root
  tags: [event-secondary]
  roles:
  - hwraid

- name: Event Prometheus servers
  hosts: event-prometheus-servers
  tags: [event-prometheus-servers]
  roles:
  - { role: cloudalchemy.snmp-exporter, tags: [ 'snmp_exporter' ] }
  - cloudalchemy.blackbox-exporter
  - { role: cloudalchemy.grafana, tags: [ 'grafana' ] }
  - { role: cloudalchemy.prometheus, tags: [ 'prometheus' ] }
  - { role: prometheus-targets, tags: ['prometheus', 'prometheus-targets' ] }
  - { role: cloudalchemy.alertmanager, tags: [ 'alertmanager' ] }
  - { role: json_exporter, tags: [ 'json_exporter' ] }

- name: public-dashboard
  hosts: public-dashboard
  remote_user: root
  roles:
  - { role: public-dashboard, tags: [ 'public-dashboard' ] }

- name: encoder-master
  hosts: encoder-master
  remote_user: root
  roles:
  - scaleway
  - { role: encoder-common, tags: [ 'encoder-master'] }
  - { role: encoder-master, tags: [ 'encoder-master'] }

- name: encoder-backend
  hosts: encoder-backend
  remote_user: root
  roles:
  - scaleway
  - { role: encoder-common, tags: [ 'encoder-backend'] }
  - { role: encoder-backend, tags: [ 'encoder-backend' ] }
