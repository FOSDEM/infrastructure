# Set to truthy if anonymous reviews should be allowed, or to falsy if not
#$anonreviews = 0;

# An SVG template to be used as apology template (shown just after the opening credits when technical issues occurred. Should have the same nominal dimensions (in pixels) as the video assets.
#$apology_template = undef;

# The DBI connection string used to connect to the database
$dbistring = 'dbi:Pg:dbname=\'sreview\';user=\'sreview\';password=\'{{ sreview_db_pw }}\';host=\'10.6.22.139\';sslmode=require';

# The data for the From: header in the email. Required if notify_actions includes email.
$email_from = 'noreply@fosdem.org';

# A filename of a Mojo::Template template to process, returning the email body. Required if notify_actions includes email.
$email_template = '/srv/sreview/assets/template-email.ep';

# The default event to handle in the webinterface. Ignored by all other parts of sreview.
$event = 'FOSDEM 2018';

# A filename pattern (glob) that tells SReview where to find new files
#$inputglob = '/srv/sreview/incoming/*/*/*';

# An array of things to do when notifying. Can contain one or more of: email, command.
$notify_actions = ['email'];

# An array of commands to run. Each component is passed through Mojo::Template before processing. To avoid quoting issues, it is a two-dimensional array, so that no shell will be called to run this.
#$notify_commands = [
#  [
#    'echo',
#    '<%== $title %>',
#    'is',
#    'available',
#    'at',
#    '<%== $url %>'
#  ]
#];

# An array of profiles, one for each encoding, to be used for output encodings
$output_profiles = ['webm','copy'];

# An array of fields to be used to create subdirectories under the output directory.
#$output_subdirs = [
#  'event',
#  'room',
#  'date'
#];

# The base directory under which SReview should place the final released files
#$outputdir = '/srv/sreview/output';

# A regular expression to parse a filename into year, month, day, hour, minute, second, and room
#$parse_re = '.*\\/(?<room>[^\\/]+)\\/(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})\\/(?<hour>\\d{2}):(?<minute>\\d{2}):(?<second>\\d{2})';

# A PNG file to be used as closing credits. Will only be used if no postroll_template was defined. Should have the same dimensions as the video assets.
#$postroll = undef;

# An SVG template to be used as closing credits. Should have the same nominal dimensions (in pixels) as the video assets.
$postroll_template = '/srv/sreview/assets/template-open.svg';

# An SVG template to be used as opening credits. Should have the same nominal dimensions (in pixels) as the video assets.
$preroll_template = '/srv/sreview/assets/template-close.svg';

# The directory on the file system where files served by the webinterface should be stored
$pubdir = '/srv/sreview/storage/';

# A maximum number of jobs that should be submitted in a single loop in sreview-dispatch. 0 means no limit.
$query_limit = 0;

# The directory to which the output of scripts should be redirected
$script_output = '/var/lib/sreview/script-output';

# A random secret key, used to encrypt the cookies.
$secret = '{{ mojosecret }}';

# A hash that tells SReview what to do with a talk when it is in a given state. Mojo::Template is used to transform these.
$state_actions = {
  'cutting' => 'qsub -cwd -V -l cut -q hiprio.q -e <%== $output_dir %> -o <%== $output_dir %> sreview-cut <%== $talkid %>',
  'generating_previews' => 'qsub -cwd -V -q hiprio.q -e <%== $output_dir %> -o <%== $output_dir %> sreview-previews <%== $talkid %>',
  'notification' => 'sreview-notify <%== $talkid %>',
  'transcoding' => 'qsub -cwd -V -q lowprio.q -e <%== $output_dir %> -o <%== $output_dir %> sreview-transcode <%== $talkid %>',
  'uploading' => 'qsub -q hiprio.q -l upload sreview-upload <%== $talkid %>'
};

# An array of commands to run on each file to be uploaded. Each component is passed through Mojo::Template before processing. To avoid quoting issues, it is a two-dimensional array, so that no shell will be called to run this.
#$upload_actions = [
#  [
#    'echo',
#    '<%== $file %>',
#    'ready for upload'
#  ]
#];

# If set, used with parse_re in an s///g command to produce an input URL
#$url_re = undef;

# The URL on which SReview runs. Note that this is used by sreview-notify to generate URLs, not by sreview-web.
$urlbase = 'review.video.fosdem.org';

# The URL prefix to be used for video data files
#$vid_prefix = '';

# A directory where encoder jobs can create a subdirectory for temporary files
#$workdir = '/tmp';

# Do not remove this, perl needs it
1;
