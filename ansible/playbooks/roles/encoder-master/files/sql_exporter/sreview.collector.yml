---
collector_name: sreview

metrics:
- metric_name: talkstate
  type: gauge
  help: 'Number of talks in a given state'
  key_labels:
  - state
  values:
  - count
  query: |
    WITH all_states AS (
    SELECT unnest(enum_range(NULL::talkstate)) AS state
    )
    SELECT
    all_states.state,
    COALESCE(talk_counts.count, 0) AS count
    FROM all_states
    LEFT JOIN (
    SELECT state, COUNT(*) AS count
    FROM talks
    GROUP BY state
    ) AS talk_counts
    ON all_states.state = talk_counts.state;
- metric_name: video_released_seconds
  type: gauge
  help: 'Length of all the released videos added together'
  values:
  - total_time
  query: |
    SELECT COALESCE(EXTRACT(EPOCH FROM SUM((endtime - starttime)::INTERVAL)), 0) AS total_time FROM talks WHERE state = 'done';
- metric_name: video_encoded_seconds
  type: gauge
  help: 'Length of the released vieos as encoded'
  values:
  - total_reviewed_duration
  query: |
    SELECT EXTRACT(EPOCH FROM SUM(talks.endtime + (CASE WHEN LENGTH(ce.property_value)=0 THEN '0' ELSE ce.property_value END || ' seconds')::INTERVAL) - (talks.starttime + (CASE WHEN LENGTH(ce.property_value)=0 THEN '0' ELSE cs.property_value END || ' seconds')::INTERVAL) AS total_reviewed_duration
    FROM talks
    JOIN corrections ce ON talks.id = ce.talk AND ce.property = 6
    JOIN corrections cs ON talks.id = cs.talk AND cs.property = 4
    WHERE talks.state = 'done';
