---

- name: setup local FOSDEM firmware directory
  file:
    path: /usr/local/share/fosdem_firmware
    state: directory
  tags:
    - firmware
    - firmware_ms2131

- name: download ms2131 firmware blob
  ansible.builtin.get_url:
    # TODO: find a better place to put this
    # this should be fine for now, since we verify it by checksum anyway
    url: https://rnd.qtrp.org/ms2131_firmware_fosdem.bin
    checksum: 'sha256:5948ac271fe4dff9ade08fd0b0e87f2622ac6cab3e4d3b43a2addbbdba0c6167'
    dest: /usr/local/share/fosdem_firmware/ms2131.bin
    owner: root
    group: root
    mode: 0644
  tags:
    - firmware_ms2131
    - firmware

- name: set up udev rules - serial
  ansible.builtin.copy:
    src: udev/20-fosdem-serial.rules
    dest: /etc/udev/rules.d/20-fosdem-serial.rules
    owner: root
    group: root
    mode: 0644
  tags:
    - firmware

- name: set up udev rules - vbox
  ansible.builtin.copy:
    src: udev/99-video-box.rules
    dest: /etc/udev/rules.d/99-video-box.rules
    owner: root
    group: root
    mode: 0644

- name: reload udev
  service:
    name: udev
    state: reloaded

- name: retrigger udev
  shell:
    cmd: udevadm trigger

- name: wait for udev to settle
  shell:
    cmd: udevadm settle

- name: check if there is a change to fosdem firmware
  shell: |
    set -eu
    ver_file=/usr/local/share/fosdem_firmware/upstream_ver
    old_ver=$(cat "${ver_file}" 2>/dev/null || true)
    cur_ver=$(dpkg-query --showformat='${Version}' --show fosdem-firmware)
    if [[ "${old_ver}" != "${cur_ver}" ]]; then
        echo "${cur_ver} new"
    else
        echo "${cur_ver} unchanged"
    fi
  register: firmware_ver
  changed_when: "'unchanged' not in firmware_ver.stdout"
  args:
    executable: /bin/bash
  tags:
    - firmware

- name: check if there is a change to ms2131 firmware
  shell: |
    set -eu
    hash_file=/usr/local/share/fosdem_firmware/ms2131_hash
    old_ver=$(cat "${hash_file}" 2>/dev/null || true)
    cur_ver=$(cat /usr/local/share/fosdem_firmware/ms2131.bin | sha256sum)
    if [[ "${old_ver}" != "${cur_ver}" ]]; then
        echo "${cur_ver} new"
    else
        echo "${cur_ver} unchanged"
    fi
  register: firmware_ver_ms2131
  changed_when: "'unchanged' not in firmware_ver_ms2131.stdout"
  args:
    executable: /bin/bash
  tags:
    - firmware

#- name: flash audio board firmware
#  shell:
#    cmd: bash /usr/share/fosdem_firmware/flash_audio_board_firmware.sh /usr/share/fosdem_firmware/audio_board_teensy.hex
#  tags:
#    - firmware
#  when: firmware_ver.changed
#  register: flash_audio_firmware
#
#- name: flash rp2040 firmware
#  shell:
#    cmd: bash /usr/share/fosdem_firmware/flash_rp2040_firmware.sh /usr/share/fosdem_firmware/box_rp2040.elf
#  tags:
#    - firmware
#  when: firmware_ver.changed
#  register: flash_rp2040_firmware
#
#- name: flash ms2131 firmware
#  shell: |
#    set -eu
#
#    old=/usr/local/share/fosdem_firmware/ms2131_old_$(date +'%Y%m%d%H%M%S').bin
#    new=/usr/local/share/fosdem_firmware/ms2131.bin
#
#    [[ -f /etc/systemd/system/video-statuskeeper.service ]] && echo 'stopping statuskeeper' && systemctl stop video-statuskeeper || true
#    echo 'reading old firmware'
#    ms213x-cli read FLASH 0 --filename "${old}"
#    if cmp "${old}" "${new}"; then
#      echo 'firmware is correct, not reflashing'
#    else
#      echo 'flashing and verifying...'
#      ms213x-cli write-file --verify FLASH 0 "${new}"
#      echo 'flashing done'
#    fi
#    [[ -f /etc/systemd/system/video-statuskeeper.service ]] && echo 'starting statuskeeper' && systemctl start video-statuskeeper || true
#  register: flash_ms2131_firmware
#  changed_when: "'not reflashing' not in flash_ms2131_firmware.stdout"
#  args:
#    executable: /bin/bash
#  tags:
#    - firmware_ms2131
#    - firmware
#  when: firmware_ver_ms2131.changed

- name: update status for fosdem firmware
  shell: |
    set -eu
    ver_file=/usr/local/share/fosdem_firmware/upstream_ver
    cur_ver=$(dpkg-query --showformat='${Version}' --show fosdem-firmware)
    echo "${cur_ver}" > "${ver_file}"
  args:
    executable: /bin/bash
  tags:
    - firmware

- name: update status for ms2131 firmware
  shell: |
    set -eu
    hash_file=/usr/local/share/fosdem_firmware/ms2131_hash
    cur_ver=$(cat /usr/local/share/fosdem_firmware/ms2131.bin | sha256sum)
    echo "${cur_ver}" > "${hash_file}"
  args:
    executable: /bin/bash
  tags:
    - firmware

- name: copy mixer test script
  ansible.builtin.copy:
    src: audiotest/audiotest.sh
    dest: /usr/local/bin/audiotest.sh
    owner: root
    group: root
    mode: 0755
