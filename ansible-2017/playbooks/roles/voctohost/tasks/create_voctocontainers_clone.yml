---
- name: destroy the container for {{ clone_config.room }} if the template has changed
  shell: lxc-destroy -f -n vocto-{{ clone_config.room }}
  when: container_template_changed
  failed_when: false

- name: check if we still have a clone for {{ clone_config.room }}
  shell: lxc-ls | grep ^vocto-{{clone_config.room}}$
  register: clone_created
  failed_when: false
  changed_when: false

- name: create a clone for {{ clone_config.room }}
  shell: lxc-clone {{ template_name }} vocto-{{ clone_config.room }}
  when: clone_created.rc != 0

# FIXME; this should probably be done with replace instead of lineinfile!
- name: set the LXC config to our liking
  lineinfile: dest={{ lxc_path }}/vocto-{{ clone_config.room }}/config line="{{ item }}"
  with_items:
  - "lxc.network.type = macvlan"
  - "lxc.network.macvlan.mode = bridge"
  - "lxc.network.flags = up"
  - "lxc.network.link = macvlan0"
  - "lxc.network.name = eth0"
  - "lxc.network.hwaddr = {{ clone_config.mac }}"
  - "lxc.network.mtu = 1500"
  register: lxc_config_set

- name: configure the hostname
  replace: dest={{ lxc_path }}/vocto-{{ clone_config.room }}/config regexp='^lxc\.utsname\ =\ .*' replace='lxc.utsname = vocto-{{ clone_config.room }}'
  register: lxc_hostname_set

- name: stop the container if needed
  shell: lxc-stop -f -n vocto-{{ clone_config.room }}
  when: lxc_config_set.changed or lxc_hostname_set.changed
  register: lxc_stopped
  failed_when: false
  changed_when: lxc_stopped.rc == 1

- name: make sure the container is started
  shell: lxc-start -d -n vocto-{{ clone_config.room }}
  changed_when: false # lxc-start doesn't say anything :(
