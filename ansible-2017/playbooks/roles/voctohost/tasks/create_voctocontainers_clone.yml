---
- name: destroy the container for {{ clone_config.room }} if the template has changed
  shell: lxc-destroy -f -n vocto-{{ clone_config.room }}
  when: container_template_changed
  failed_when: false

- name: check if we still have a clone for {{ clone_config.room }}
  shell: lxc-ls | grep ^vocto-{{clone_config.room}}$
  register: clone_created
  failed_when: false
  changed_when: false

- name: create a clone for {{ clone_config.room }}
  shell: lxc-clone {{ template_name }} vocto-{{ clone_config.room }}
  when: clone_created.rc != 0

- name: set the lxc config for {{ clone_config.room }}
  lineinfile: dest={{ lxc_path }}/vocto-{{ clone_config.room }}/config line={{ item.value }} regexp={{ item.line }}
  with_items:
  - line: "^lxc\\.network\\.type\\ =\\ .*"
    value: "lxc.network.type = macvlan"
  - line: "^lxc\\.network\\.macvlan.mode\\ =\\ .*"
    value: "lxc.network.macvlan.mode = bridge"
  - line: "^lxc\\.network\\.flags\\ =\\ .*"
    value: "lxc.network.flags = up"
  - line: "^lxc\\.network\\.link\\ =\\ .*"
    value: "lxc.network.link = {{ macvlan_dev }}"
  - line: "^lxc\\.network\\.name\\ =\\ .*"
    value: "lxc.network.name = eth0"
  - line: "^lxc\\.network\\.hwaddr\\ =\\ .*"
    value: "lxc.network.hwaddr = {{ clone_config.mac }}"
  - line: "^lxc\\.network\\.mtu\\ =\\ .*"
    value: "lxc.network.mtu = 1500"
  - line: "^lxc\\.utsname\\ =\\ .*"
    value: "lxc.utsname = vocto-{{ clone_config.room }}"
  - line: "^lxc\\.mount\\.entry\\ =\\ .*"
    value: "lxc.mount.entry = {{ vocto_video_disk }}/{{ clone_config.room }} {{ lxc_path }}/vocto-{{ clone_config.room }}/rootfs{{ vocto_container_recording_directory }} none bind 0 0"
  register: lxc_config_set

- name: set the vocto config for {{ clone_config.room }}
  lineinfile: dest={{ lxc_path }}/vocto-{{ clone_config.room }}/rootfs/opt/config/config.sh line={{ item.value }} regexp={{ item.line }} create=yes owner=root group=root mode=0644
  with_items:
  - line: "^CAM=.*"
    value: "CAM=\"{{ clone_config.cam_source }}\""
  - line: "^PRES=.*"
    value: "PRES=\"{{ clone_config.slides_source }}\""
  - line: "^URLPARAMS=.*"
    value: "URLPARAMS=\"{{ vocto_container_source_url_parameters }}\""
  - line: "^RECDIR=.*"
    value: "RECDIR=\"{{ vocto_container_recording_directory }}\""
  - line: "^HOST=.*"
    value: "HOST=\"vocto-{{ clone_config.room }}\""
  - line: "^ROOM=.*"
    value: "ROOM=\"{{ clone_config.room }}\""
  register: clone_config_set

- name: stop the container for {{ clone_config.room }} if the config has changed
  shell: lxc-stop -n vocto-{{ clone_config.room }}
  when: lxc_config_set.changed or clone_config_set.changed
  register: lxc_stopped
  failed_when: false
  changed_when: lxc_stopped.rc == 0

- name: get the state for the container for {{ clone_config.room }}
  shell: lxc-info -n vocto-{{ clone_config.room }} | grep State | tr -s ' ' | cut -d' ' -f 2
  register: lxc_state
  changed_when: false

- name: start container for {{ clone_config.room }}
  shell: lxc-start -d -n vocto-{{ clone_config.room }}
  when: lxc_state.stdout != "RUNNING"
  changed_when: true
